import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler

data = pd.read_csv("Mall_Customers.csv")


data.head(8)

data.isna().sum()

label_encoder = LabelEncoder()

data['Genre'] = label_encoder.fit_transform(data['Genre'])

X = data[['Genre','Age', 'Annual Income', 'Spending Score']]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

nertia = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, n_init=10,random_state=42)
    kmeans.fit(X)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), inertia, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.show()

k = 5
kmeans = KMeans(n_clusters=k, n_init=10, random_state=42)
clusters = kmeans.fit_predict(X)
data['Cluster'] = clusters


import seaborn as sns

plt.figure(figsize=(10, 8))
sns.scatterplot(x='Annual Income', y='Spending Score', hue='Cluster', data=data, palette='colorblind')
plt.title('K-means Clustering')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.show()


for i in range(k):
    cluster_data = data[data['Cluster'] == i]
    plt.scatter(cluster_data['Annual Income'], cluster_data['Spending Score'], label=f'Cluster {i}')

# Plot centroids
plt.scatter(kmeans.cluster_centers_[:, 1], kmeans.cluster_centers_[:, 2], s=300, c='red', label='Centroids')
plt.title('Clusters of Customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()

